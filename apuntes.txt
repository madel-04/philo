The mutex class is a synchronization primitive that can be used to protect shared data from being simultaneously accessed by multiple threads.

mutex offers exclusive, non-recursive ownership semantics:

A calling thread owns a mutex from the time that it successfully calls either lock or try_lock until it calls unlock.
When a thread owns a mutex, all other threads will block (for calls to lock) or receive a false return value (for try_lock) if they attempt to claim ownership of the mutex.
A calling thread must not own the mutex prior to calling lock or try_lock.
The behavior of a program is undefined if a mutex is destroyed while still owned by any threads, or a thread terminates while owning a mutex. The mutex class satisfies all requirements of Mutex and StandardLayoutType.

std::mutex is neither copyable nor movable.


When you call pthread_create you have already locked mutex1. That means that every other thread that calls pthread_mutex_lock(&mutex1); 
will wait for the mutex to be unlocked. That is what happen when you create a second thread: mutex1 is already locked, so the second thread 
cannot enter the critical section but need to wait for the mutex to be unlocked. That happens at the end of the main function.

___

In C, an enumm (short for enumeration) is a user-defined data type used to create a set of named integer constants. Enums provide a way to make code more redeable
and maintainable by using names to values instead of using raw numbers-
    - Enums define a custom data type with a fixed set of named values, which are usually integers
    - Enum values are defines within curly braces and separated by commas
    - Enum values are automatically assigned intefer values starting from 0, but yoy can explicity assign values to them.
    - ENums are often used to improved code readability, making it easier to understand the meaning of constants in your program.
    - Enum values can be used to switch statements and as constants in your code

enum Days( Monday (= 0), Tuesday (= 1), Wednesday)
enum Days( Monday = 8, Tuesday = 5, Wednesday = 4)


___

IN C, getters and setters are functions used to acces and modify the orivate data members of a structure or object. They are often employed to enforce
encapsulation and provide controlled acces to the internal state of an object.